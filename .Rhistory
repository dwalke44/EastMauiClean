nodesInput[10, (16)]
poutput$E266 = wshedInput[266, c(13:20)]*nodesInput[274, (16)]*
nodesInput[211, (16)]*
nodesInput[87, (16)]*
nodesInput[46, (16)]*
nodesInput[10, (16)]
poutput$E267 = wshedInput[267, c(13:20)]*nodesInput[64, (16)]*
nodesInput[160, (16)]*
nodesInput[156, (16)]*
nodesInput[125, (16)]*
nodesInput[91, (16)]*
nodesInput[90, (16)]*
nodesInput[46, (16)]*
nodesInput[10, (16)]
poutput$E268 = wshedInput[268, c(13:20)]*nodesInput[152, (16)]*
nodesInput[211, (16)]*
nodesInput[87, (16)]*
nodesInput[46, (16)]*
nodesInput[10, (16)]
poutput$E269 = wshedInput[269, c(13:20)]*nodesInput[70, (16)]*
nodesInput[152, (16)]*
nodesInput[211, (16)]*
nodesInput[87, (16)]*
nodesInput[46, (16)]*
nodesInput[10, (16)]
poutput$E270 = wshedInput[270, c(13:20)]*nodesInput[275, (16)]*
nodesInput[210, (16)]*
nodesInput[126, (16)]*
nodesInput[87, (16)]*
nodesInput[46, (16)]*
nodesInput[10, (16)]
wphabAll$a239= poutput$E239[2:8]*allsp.hab(waterImpactedHab[239])
wphabAB$a239= poutput$E239[1]*ab.hab(waterImpactedHab[239])
wphabAll$a240= poutput$E240[2:8]*allsp.hab(waterImpactedHab[240])
wphabAB$a240= poutput$E240[1]*ab.hab(waterImpactedHab[240])
wphabAll$a241= poutput$E241[2:8]*allsp.hab(waterImpactedHab[241])
wphabAB$a241= poutput$E241[1]*ab.hab(waterImpactedHab[241])
wphabAll$a242 = poutput$E242[2:8]*allsp.hab(waterImpactedHab[242])
wphabAB$a242= poutput$E242[1]*ab.hab(waterImpactedHab[242])
wphabAll$a243 = poutput$E243[2:8]*allsp.hab(waterImpactedHab[243])
wphabAB$a243= poutput$E243[1]*ab.hab(waterImpactedHab[243])
wphabAll$a244= poutput$E244[2:8]*allsp.hab(waterImpactedHab[244])
wphabAB$a244= poutput$E244[1]*ab.hab(waterImpactedHab[244])
wphabAll$a245= poutput$E245[2:8]*allsp.hab(waterImpactedHab[245])
wphabAB$a245= poutput$E245[1]*ab.hab(waterImpactedHab[245])
wphabAll$a246 = poutput$E246[2:8]*allsp.hab(waterImpactedHab[246])
wphabAB$a246= poutput$E246[1]*ab.hab(waterImpactedHab[246])
wphabAll$a247 = poutput$E247[2:8]*allsp.hab(waterImpactedHab[247])
wphabAB$a247= poutput$E247[1]*ab.hab(waterImpactedHab[247])
wphabAll$a248= poutput$E248[2:8]*allsp.hab(waterImpactedHab[248])
wphabAB$a248= poutput$E248[1]*ab.hab(waterImpactedHab[248])
wphabAll$a249= poutput$E249[2:8]*allsp.hab(waterImpactedHab[249])
wphabAB$a249= poutput$E249[1]*ab.hab(waterImpactedHab[249])
wphabAll$a250= poutput$E250[2:8]*allsp.hab(waterImpactedHab[250])
wphabAB$a250= poutput$E250[1]*ab.hab(waterImpactedHab[250])
wphabAll$a251= poutput$E251[2:8]*allsp.hab(waterImpactedHab[251])
wphabAB$a251= poutput$E251[1]*ab.hab(waterImpactedHab[251])
wphabAll$a252 = poutput$E252[2:8]*allsp.hab(waterImpactedHab[252])
wphabAB$a252= poutput$E252[1]*ab.hab(waterImpactedHab[252])
wphabAll$a253 = poutput$E253[2:8]*allsp.hab(waterImpactedHab[253])
wphabAB$a253= poutput$E253[1]*ab.hab(waterImpactedHab[253])
wphabAll$a254= poutput$E254[2:8]*allsp.hab(waterImpactedHab[254])
wphabAB$a254= poutput$E254[1]*ab.hab(waterImpactedHab[254])
wphabAll$a255= poutput$E255[2:8]*allsp.hab(waterImpactedHab[255])
wphabAB$a255= poutput$E255[1]*ab.hab(waterImpactedHab[255])
wphabAll$a256 = poutput$E256[2:8]*allsp.hab(waterImpactedHab[256])
wphabAB$a256= poutput$E256[1]*ab.hab(waterImpactedHab[256])
wphabAll$a257 = poutput$E257[2:8]*allsp.hab(waterImpactedHab[257])
wphabAB$a257= poutput$E257[1]*ab.hab(waterImpactedHab[257])
wphabAll$a258= poutput$E258[2:8]*allsp.hab(waterImpactedHab[258])
wphabAB$a258= poutput$E258[1]*ab.hab(waterImpactedHab[258])
wphabAll$a259= poutput$E259[2:8]*allsp.hab(waterImpactedHab[259])
wphabAB$a259= poutput$E259[1]*ab.hab(waterImpactedHab[259])
wphabAll$a260= poutput$E260[2:8]*allsp.hab(waterImpactedHab[260])
wphabAB$a260= poutput$E260[1]*ab.hab(waterImpactedHab[260])
wphabAll$a261= poutput$E261[2:8]*allsp.hab(waterImpactedHab[261])
wphabAB$a261= poutput$E261[1]*ab.hab(waterImpactedHab[261])
wphabAll$a262 = poutput$E262[2:8]*allsp.hab(waterImpactedHab[262])
wphabAB$a262= poutput$E262[1]*ab.hab(waterImpactedHab[262])
wphabAll$a263 = poutput$E263[2:8]*allsp.hab(waterImpactedHab[263])
wphabAB$a263= poutput$E263[1]*ab.hab(waterImpactedHab[263])
wphabAll$a264= poutput$E264[2:8]*allsp.hab(waterImpactedHab[264])
wphabAB$a264= poutput$E264[1]*ab.hab(waterImpactedHab[264])
wphabAll$a265= poutput$E265[2:8]*allsp.hab(waterImpactedHab[265])
wphabAB$a265= poutput$E265[1]*ab.hab(waterImpactedHab[265])
wphabAll$a266 = poutput$E266[2:8]*allsp.hab(waterImpactedHab[266])
wphabAB$a266= poutput$E266[1]*ab.hab(waterImpactedHab[266])
wphabAll$a267 = poutput$E267[2:8]*allsp.hab(waterImpactedHab[267])
wphabAB$a267= poutput$E267[1]*ab.hab(waterImpactedHab[267])
wphabAll$a268= poutput$E268[2:8]*allsp.hab(waterImpactedHab[268])
wphabAB$a268= poutput$E268[1]*ab.hab(waterImpactedHab[268])
wphabAll$a269= poutput$E269[2:8]*allsp.hab(waterImpactedHab[269])
wphabAB$a269= poutput$E269[1]*ab.hab(waterImpactedHab[269])
wphabAll$a270= poutput$E270[2:8]*allsp.hab(waterImpactedHab[270])
wphabAB$a270= poutput$E270[1]*ab.hab(waterImpactedHab[270])
WshedHabAllsp$w036 = wphabAll$a239+wphabAll$a240+ wphabAll$a241+
wphabAll$a242+ wphabAll$a243+ wphabAll$a244+ wphabAll$a245+
wphabAll$a246+ wphabAll$a247+ wphabAll$a248+ wphabAll$a249 +
wphabAll$a250+ wphabAll$a251+ wphabAll$a252+ wphabAll$a253+
wphabAll$a254+ wphabAll$a255+  wphabAll$a256+ wphabAll$a247+
wphabAll$a258+ wphabAll$a259 + wphabAll$a260+ wphabAll$a261+
wphabAll$a262+ wphabAll$a263+ wphabAll$a264+ wphabAll$a265+
wphabAll$a266+ wphabAll$a267+ wphabAll$a268+ wphabAll$a269 +
wphabAll$a270
WshedHabABsp$w036 = wphabAB$a239+wphabAB$a240+ wphabAB$a241+
wphabAB$a242+ wphabAB$a243+ wphabAB$a244+ wphabAB$a245+
wphabAB$a246+ wphabAB$a247+ wphabAB$a248+ wphabAB$a249 +
wphabAB$a250+ wphabAB$a251+ wphabAB$a252+ wphabAB$a253+
wphabAB$a254+ wphabAB$a255+ wphabAB$a256+ wphabAB$a247+
wphabAB$a258+ wphabAB$a259+ wphabAB$a260+ wphabAB$a261+
wphabAB$a262+ wphabAB$a263+ wphabAB$a264+ wphabAB$a265+
wphabAB$a266+ wphabAB$a267+ wphabAB$a268+ wphabAB$a269 +
wphabAB$a270
# --------------------Watershed 37 -------------------------------------------
poutput$E271 = wshedInput[271, c(13:20)]*0
wphabAll$a271= poutput$E271[2:8]*allsp.hab(waterImpactedHab[271])
wphabAB$a271= poutput$E271[1]*ab.hab(waterImpactedHab[271])
WshedHabAllsp$w037 = wphabAll$a271
WshedHabABsp$w037 = wphabAB$a271
# --------------------Watershed 38 -------------------------------------------
poutput$E272 = wshedInput[272, c(13:20)]*nodesInput[6, (16)]
poutput$E273 = wshedInput[273, c(13:20)]*nodesInput[82, (16)]*
nodesInput[6, (16)]
wphabAll$a272= poutput$E272[2:8]*allsp.hab(waterImpactedHab[272])
wphabAB$a272= poutput$E272[1]*ab.hab(waterImpactedHab[272])
wphabAll$a273= poutput$E273[2:8]*allsp.hab(waterImpactedHab[273])
wphabAB$a273= poutput$E273[1]*ab.hab(waterImpactedHab[273])
WshedHabAllsp$w038 = wphabAll$a272 + wphabAll$a273
WshedHabABsp$w038 = wphabAB$a272 + wphabAB$a273
# --------------------Watershed 39 -------------------------------------------
poutput$E274 = wshedInput[274, c(13:20)]*nodesInput[9, (16)]
poutput$E275 = wshedInput[275, c(13:20)]*nodesInput[79, (16)]*
nodesInput[9, (16)]
poutput$E276 = wshedInput[276, c(13:20)]*nodesInput[127, (16)]*
nodesInput[79, (16)]*
nodesInput[9, (16)]
poutput$E277 = wshedInput[277, c(13:20)]*nodesInput[80, (16)]*
nodesInput[79, (16)]*
nodesInput[9, (16)]
wphabAll$a274= poutput$E274[2:8]*allsp.hab(waterImpactedHab[274])
wphabAB$a274= poutput$E274[1]*ab.hab(waterImpactedHab[274])
wphabAll$a275= poutput$E275[2:8]*allsp.hab(waterImpactedHab[275])
wphabAB$a275= poutput$E275[1]*ab.hab(waterImpactedHab[275])
wphabAll$a276= poutput$E276[2:8]*allsp.hab(waterImpactedHab[276])
wphabAB$a276= poutput$E276[1]*ab.hab(waterImpactedHab[276])
wphabAll$a277= poutput$E277[2:8]*allsp.hab(waterImpactedHab[277])
wphabAB$a277= poutput$E277[1]*ab.hab(waterImpactedHab[277])
WshedHabAllsp$w039 = wphabAll$a274 + wphabAll$a275+ wphabAll$a276 +
wphabAll$a277
WshedHabABsp$w039 = wphabAB$a274 + wphabAB$a275 +wphabAB$a276 +
wphabAB$a277
# --------------------Watershed 40 -------------------------------------------
poutput$E278 = wshedInput[278, c(13:20)]*nodesInput[311, (16)]
poutput$E279 =  wshedInput[279, c(13:20)]*nodesInput[133, (16)]*
nodesInput[311, (16)]
poutput$E280 = wshedInput[280, c(13:20)]*nodesInput[104, (16)]*
nodesInput[311, (16)]
wphabAll$a278= poutput$E278[2:8]*allsp.hab(waterImpactedHab[278])
wphabAB$a278= poutput$E278[1]*ab.hab(waterImpactedHab[278])
wphabAll$a279= poutput$E279[2:8]*allsp.hab(waterImpactedHab[279])
wphabAB$a279= poutput$E279[1]*ab.hab(waterImpactedHab[279])
wphabAll$a280= poutput$E280[2:8]*allsp.hab(waterImpactedHab[280])
wphabAB$a280= poutput$E280[1]*ab.hab(waterImpactedHab[280])
WshedHabAllsp$w040 = wphabAll$a278 + wphabAll$a279+ wphabAll$a280
WshedHabABsp$w040 = wphabAB$a278 + wphabAB$a279 +wphabAB$a280
# --------------------Watershed 41 -------------------------------------------
poutput$E281 = wshedInput[281, c(13:20)]*nodesInput[104, (16)]
wphabAll$a281= poutput$E281[2:8]*allsp.hab(waterImpactedHab[281])
wphabAB$a281= poutput$E281[1]*ab.hab(waterImpactedHab[281])
WshedHabAllsp$w041 = wphabAll$a281
WshedHabABsp$w041 = wphabAB$a281
# --------------------Watershed 42 -------------------------------------------
poutput$E282 = wshedInput[282, c(13:20)]*nodesInput[1, (16)]
poutput$E283 = wshedInput[283, c(13:20)]*nodesInput[304, (16)]*
nodesInput[1, (16)]
poutput$E284 = wshedInput[284, c(13:20)]*nodesInput[305, (16)]*
nodesInput[1, (16)]
poutput$E285 = wshedInput[285, c(13:20)]*nodesInput[306, (16)]*
nodesInput[1, (16)]
poutput$E286 = wshedInput[286, c(13:20)]*nodesInput[169, (16)]*
nodesInput[1, (16)]
wphabAll$a282= poutput$E282[2:8]*allsp.hab(waterImpactedHab[282])
wphabAB$a282= poutput$E282[1]*ab.hab(waterImpactedHab[282])
wphabAll$a283= poutput$E283[2:8]*allsp.hab(waterImpactedHab[283])
wphabAB$a283= poutput$E283[1]*ab.hab(waterImpactedHab[283])
wphabAll$a284= poutput$E284[2:8]*allsp.hab(waterImpactedHab[284])
wphabAB$a284= poutput$E284[1]*ab.hab(waterImpactedHab[284])
wphabAll$a285= poutput$E285[2:8]*allsp.hab(waterImpactedHab[285])
wphabAB$a285= poutput$E285[1]*ab.hab(waterImpactedHab[285])
wphabAll$a286= poutput$E286[2:8]*allsp.hab(waterImpactedHab[286])
wphabAB$a286= poutput$E286[1]*ab.hab(waterImpactedHab[286])
WshedHabAllsp$w042 = wphabAll$a282 + wphabAll$a283+ wphabAll$a284 +
wphabAll$a285+ wphabAll$a286
WshedHabABsp$w042 = wphabAB$a282 + wphabAB$a283 +wphabAB$a284 +
wphabAB$a285 + wphabAB$a286
# --------------------Watershed 43 -------------------------------------------
poutput$E287 = wshedInput[287, c(13:20)]*nodesInput[4, (16)]
poutput$E288 = wshedInput[288, c(13:20)]*nodesInput[157, (16)]*
nodesInput[4, (16)]
poutput$E289 = wshedInput[289, c(13:20)]*nodesInput[162, (16)]*
nodesInput[157, (16)]*
nodesInput[4, (16)]
poutput$E290 = wshedInput[290, c(13:20)]*nodesInput[163, (16)]*
nodesInput[162, (16)]*
nodesInput[157, (16)]*
nodesInput[4, (16)]
poutput$E291 = wshedInput[291, c(13:20)]*nodesInput[163, (16)]*
nodesInput[162, (16)]*
nodesInput[157, (16)]*
nodesInput[4, (16)]
poutput$E292 = wshedInput[292, c(13:20)]*nodesInput[189, (16)]*
nodesInput[163, (16)]*
nodesInput[162, (16)]*
nodesInput[157, (16)]*
nodesInput[4, (16)]
poutput$E293 = wshedInput[293, c(13:20)]*nodesInput[219, (16)]*
nodesInput[163, (16)]*
nodesInput[162, (16)]*
nodesInput[157, (16)]*
nodesInput[4, (16)]
wphabAll$a287= poutput$E287[2:8]*allsp.hab(waterImpactedHab[287])
wphabAB$a287= poutput$E287[1]*ab.hab(waterImpactedHab[287])
wphabAll$a288= poutput$E288[2:8]*allsp.hab(waterImpactedHab[288])
wphabAB$a288= poutput$E288[1]*ab.hab(waterImpactedHab[288])
wphabAll$a289= poutput$E289[2:8]*allsp.hab(waterImpactedHab[289])
wphabAB$a289= poutput$E289[1]*ab.hab(waterImpactedHab[289])
wphabAll$a290= poutput$E290[2:8]*allsp.hab(waterImpactedHab[290])
wphabAB$a290= poutput$E290[1]*ab.hab(waterImpactedHab[290])
wphabAll$a291= poutput$E291[2:8]*allsp.hab(waterImpactedHab[291])
wphabAB$a291= poutput$E291[1]*ab.hab(waterImpactedHab[291])
wphabAll$a292= poutput$E292[2:8]*allsp.hab(waterImpactedHab[292])
wphabAB$a292= poutput$E292[1]*ab.hab(waterImpactedHab[292])
wphabAll$a293= poutput$E293[2:8]*allsp.hab(waterImpactedHab[293])
wphabAB$a293= poutput$E293[1]*ab.hab(waterImpactedHab[293])
WshedHabAllsp$w043 = wphabAll$a287+ wphabAll$a288 + wphabAll$a289+
wphabAll$a290 + wphabAll$a291+ wphabAll$a292+ wphabAll$a293
WshedHabABsp$w043 = wphabAB$a287 + wphabAB$a288 + wphabAB$a289 +
wphabAB$a290 + wphabAB$a291 + wphabAB$a292 + wphabAB$a293
# --------------------Watershed 44 -------------------------------------------
poutput$E294 = wshedInput[294, c(13:20)]*nodesInput[5, (16)]
poutput$E295 = wshedInput[295, c(13:20)]*nodesInput[308, (16)]*
nodesInput[5, (16)]
wphabAll$a294= poutput$E294[2:8]*allsp.hab(waterImpactedHab[294])
wphabAB$a294= poutput$E294[1]*ab.hab(waterImpactedHab[294])
wphabAll$a295= poutput$E295[2:8]*allsp.hab(waterImpactedHab[295])
wphabAB$a295= poutput$E295[1]*ab.hab(waterImpactedHab[295])
WshedHabAllsp$w044 = wphabAll$a294+ wphabAll$a295
WshedHabABsp$w044 = wphabAB$a294 + wphabAB$a295
# --------------------Watershed 45 -------------------------------------------
poutput$E296 = wshedInput[296, c(13:20)]*nodesInput[3, (16)]
poutput$E297 = wshedInput[297, c(13:20)]*nodesInput[84, (16)]*
nodesInput[3, (16)]
poutput$E298 = wshedInput[298, c(13:20)]*nodesInput[213, (16)]*
nodesInput[84, (16)]*
nodesInput[3, (16)]
wphabAll$a296= poutput$E296[2:8]*allsp.hab(waterImpactedHab[296])
wphabAB$a296= poutput$E296[1]*ab.hab(waterImpactedHab[296])
wphabAll$a297= poutput$E297[2:8]*allsp.hab(waterImpactedHab[297])
wphabAB$a297= poutput$E297[1]*ab.hab(waterImpactedHab[297])
wphabAll$a298= poutput$E298[2:8]*allsp.hab(waterImpactedHab[298])
wphabAB$a298= poutput$E298[1]*ab.hab(waterImpactedHab[298])
WshedHabAllsp$w045 = wphabAll$a296+ wphabAll$a297+ wphabAll$a298
WshedHabABsp$w045 = wphabAB$a296 + wphabAB$a297+ wphabAB$a298
# --------------------Watershed 46 -------------------------------------------
poutput$E299 = wshedInput[299, c(13:20)]*nodesInput[2, (16)]
poutput$E300 = wshedInput[300, c(13:20)]*nodesInput[307, (16)]*
nodesInput[2, (16)]
poutput$E301 = wshedInput[301, c(13:20)]*nodesInput[85, (16)]*
nodesInput[2, (16)]
poutput$E302 = wshedInput[302, c(13:20)]*nodesInput[99, (16)]*
nodesInput[85, (16)]*
nodesInput[2, (16)]
poutput$E303 = wshedInput[303, c(13:20)]*nodesInput[129, (16)]*
nodesInput[99, (16)]*
nodesInput[85, (16)]*
nodesInput[2, (16)]
poutput$E304 = wshedInput[304, c(13:20)]*nodesInput[145, (16)]*
nodesInput[129, (16)]*
nodesInput[99, (16)]*
nodesInput[85, (16)]*
nodesInput[2, (16)]
poutput$E305 = wshedInput[305, c(13:20)]*nodesInput[76, (16)]*
nodesInput[2, (16)]
poutput$E306 = wshedInput[306, c(13:20)]*nodesInput[137, (16)]*
nodesInput[2, (16)]
poutput$E307 = wshedInput[307, c(13:20)]*nodesInput[277, (16)]*
nodesInput[137, (16)]*
nodesInput[2, (16)]
poutput$E308 = wshedInput[308, c(13:20)]*nodesInput[65, (16)]*
nodesInput[137, (16)]*
nodesInput[2, (16)]
wphabAll$a299= poutput$E299[2:8]*allsp.hab(waterImpactedHab[299])
wphabAB$a299= poutput$E299[1]*ab.hab(waterImpactedHab[299])
wphabAll$a300= poutput$E300[2:8]*allsp.hab(waterImpactedHab[300])
wphabAB$a300= poutput$E300[1]*ab.hab(waterImpactedHab[300])
wphabAll$a301= poutput$E301[2:8]*allsp.hab(waterImpactedHab[301])
wphabAB$a301= poutput$E301[1]*ab.hab(waterImpactedHab[301])
wphabAll$a302 = poutput$E302[2:8]*allsp.hab(waterImpactedHab[302])
wphabAB$a302= poutput$E302[1]*ab.hab(waterImpactedHab[302])
wphabAll$a303 = poutput$E303[2:8]*allsp.hab(waterImpactedHab[303])
wphabAB$a303= poutput$E303[1]*ab.hab(waterImpactedHab[303])
wphabAll$a304= poutput$E304[2:8]*allsp.hab(waterImpactedHab[304])
wphabAB$a304= poutput$E304[1]*ab.hab(waterImpactedHab[304])
wphabAll$a305= poutput$E305[2:8]*allsp.hab(waterImpactedHab[305])
wphabAB$a305= poutput$E305[1]*ab.hab(waterImpactedHab[305])
wphabAll$a306 = poutput$E306[2:8]*allsp.hab(waterImpactedHab[306])
wphabAB$a306= poutput$E306[1]*ab.hab(waterImpactedHab[306])
wphabAll$a307 = poutput$E307[2:8]*allsp.hab(waterImpactedHab[307])
wphabAB$a307= poutput$E307[1]*ab.hab(waterImpactedHab[307])
wphabAll$a308= poutput$E308[2:8]*allsp.hab(waterImpactedHab[308])
wphabAB$a308= poutput$E308[1]*ab.hab(waterImpactedHab[308])
WshedHabAllsp$w046 = wphabAll$a299+wphabAll$a300+ wphabAll$a301+
wphabAll$a302+ wphabAll$a303+ wphabAll$a304+ wphabAll$a305+
wphabAll$a306+ wphabAll$a307+ wphabAll$a308
WshedHabABsp$w046 = wphabAB$a299+wphabAB$a300+ wphabAB$a301+
wphabAB$a302+ wphabAB$a303+ wphabAB$a304+ wphabAB$a305+
wphabAB$a306+ wphabAB$a307+ wphabAB$a308
# -------------------------------------------------------------------
# Save output in dataframe
output = list("WsedHabAllSp" = WshedHabAllsp, "WshedHabAB" = WshedHabABsp,
"WaterPassageHabAllSp" = wphabAll,
"WaterPassageHabAB" = wphabAB,
"PassageEffectedHab" = poutput)
return(output)
}
inpath = "~/Programming/Trutta/HSHEP/EMaui/EMpackage/eastMaui/rawData"
# required functions
percent <- function(x, digits = 2, format = "f", ...) {
paste0(formatC(100 * x, format = format, digits = digits, ...), "%")
}
allsp.hab = function(x){
y = (1-(0.0000681*((100-x)^2) - 0.00032*(100-x)))
return(y)
}
ab.hab = function(x){
y = (1-(0.00004678*((100-x)^2) + 0.000313*(100-x)))
return(y)
}
# read inputs in
#
watersheds = read_excel(paste(inpath, "/BFQ50_1.xlsx", sep = ""))
wshedNames = watersheds %>% distinct( WshedID, Wshed_Name )
wshedNames = wshedNames[-23, ]
# corrected
watersheds.c = read_excel(paste(inpath, "/USGSflow2ModelFlowCalculatorv0.3.xlsx", sep = ""))
wsheds.c = watersheds.c[ ,c(1,5)]
names(wsheds.c)<- c("BASINID", "BFQ50.c")
watersheds.n = left_join(watersheds, wsheds.c, by = "BASINID")
# watershedsOld = read_excel(paste(inpath, "/watersheds.xlsx", sep = ""))
# Water calculations input
watershedsWaterInput = watersheds.n[ ,c(1,2,23)]
watershedsWaterInput[is.na(watershedsWaterInput)]<- 0
waterInput.mat= as.matrix(watershedsWaterInput)
# Habitat calculations input matrix
habitatInput.mat = data.matrix(watersheds)
habitatInput.mat = habitatInput.mat[, -6]
# nodes.compare = eastMaui::nodes1
# nodesOld = read_excel(paste(inpath, "/nodes_mixed.xlsx", sep = ""))
nodes = read_excel(paste(inpath, "/No Diversion.xlsx", sep = ""))
nodes = nodes[ ,-c(2:7)]
nodes0 = read_excel(paste(inpath, "/Sugar Diversion.xlsx", sep = ""))
nodes0 = nodes0[ ,-c(2:7)]
nodes1 = read_excel(paste(inpath, "/IIFS2008.xlsx", sep = ""))
nodes1 = nodes1[ ,-c(2:7)]
nodes2 = read_excel(paste(inpath, "/IIFS2008_plus_taro.xlsx", sep = ""))
nodes2 = nodes2[ ,-c(2:7)]
nodes3 = read_excel(paste(inpath, "/DiversionInputMix5v0.1.xlsx", sep = ""))
nodes3 = nodes3[ ,-c(2:7)]
nodes4 = read_excel(paste(inpath, "/DiversionInputMix5.xlsx", sep = ""))
nodes4 = nodes4[ ,-c(2:7)]
nodes5 = read_excel(paste(inpath, "/DiversionInputMix5.xlsx", sep = ""))
nodes5 = nodes5[ ,-c(2:7)]
nodes6 = read_excel(paste(inpath, "/DiversionInputMix5.xlsx", sep = ""))
nodes6 = nodes6[ ,-c(2:7)]
nodes = nodes[order(nodes$ID), ]
nodes0 = nodes0[order(nodes0$ID), ]
nodes1 = nodes1[order(nodes1$ID), ]
nodes2 = nodes2[order(nodes2$ID), ]
nodes3 = nodes3[order(nodes3$ID), ]
nodes4 = nodes4[order(nodes4$ID), ]
nodes5 = nodes5[order(nodes5$ID), ]
nodes6 = nodes6[order(nodes6$ID), ]
nodes.mat = data.matrix(nodes)
nodes0.mat = data.matrix(nodes0)
nodes1.mat = data.matrix(nodes1)
nodes2.mat = data.matrix(nodes2)
nodes3.mat = data.matrix(nodes3)
nodes4.mat = data.matrix(nodes4)
nodes5.mat = data.matrix(nodes5)
nodes6.mat = data.matrix(nodes6)
# calc upstream/downstream effect for each node
# for habitat calculations
nodesh = nodes
nodes0h = nodes0
nodes1h = nodes1
nodes2h = nodes2
nodes3h = nodes3
nodes4h = nodes4
nodes5h = nodes5
nodes6h = nodes6
nodesh$dsImpact = nodesh$DnEntrain*nodesh$DnBarrier*nodesh$DnHab*nodesh$DnOther
nodes0h$dsImpact = nodes0h$DnEntrain*nodes0h$DnBarrier*nodes0h$DnHab*nodes0h$DnOther
nodes1h$dsImpact = nodes1h$DnEntrain*nodes1h$DnBarrier*nodes1h$DnHab*nodes1h$DnOther
nodes2h$dsImpact = nodes2h$DnEntrain*nodes2h$DnBarrier*nodes2h$DnHab*nodes2h$DnOther
nodes3h$dsImpact = nodes3h$DnEntrain*nodes3h$DnBarrier*nodes3h$DnHab*nodes3h$DnOther
nodes4h$dsImpact = nodes4h$DnEntrain*nodes4h$DnBarrier*nodes4h$DnHab*nodes4h$DnOther
nodes5h$dsImpact = nodes5h$DnEntrain*nodes5h$DnBarrier*nodes5h$DnHab*nodes5h$DnOther
nodes6h$dsImpact = nodes6h$DnEntrain*nodes6h$DnBarrier*nodes6h$DnHab*nodes6h$DnOther
nodesh$usImpact = nodesh$UpEntrain*nodesh$UpBarrier*nodesh$UpOther*nodesh$UpHab
nodes0h$usImpact = nodes0h$UpEntrain*nodes0h$UpBarrier*nodes0h$UpOther*nodes0h$UpHab
nodes1h$usImpact = nodes1h$UpEntrain*nodes1h$UpBarrier*nodes1h$UpOther*nodes1h$UpHab
nodes2h$usImpact = nodes2h$UpEntrain*nodes2h$UpBarrier*nodes2h$UpOther*nodes2h$UpHab
nodes3h$usImpact = nodes3h$UpEntrain*nodes3h$UpBarrier*nodes3h$UpOther*nodes3h$UpHab
nodes4h$usImpact = nodes4h$UpEntrain*nodes4h$UpBarrier*nodes4h$UpOther*nodes4h$UpHab
nodes5h$usImpact = nodes5h$UpEntrain*nodes5h$UpBarrier*nodes5h$UpOther*nodes5h$UpHab
nodes6h$usImpact = nodes6h$UpEntrain*nodes6h$UpBarrier*nodes6h$UpOther*nodes6h$UpHab
nodesh$passage = nodesh$dsImpact*nodesh$usImpact
nodes0h$passage = nodes0h$dsImpact*nodes0h$usImpact
nodes1h$passage = nodes1h$dsImpact*nodes1h$usImpact
nodes2h$passage = nodes2h$dsImpact*nodes2h$usImpact
nodes3h$passage = nodes3h$dsImpact*nodes3h$usImpact
nodes4h$passage = nodes4h$dsImpact*nodes4h$usImpact
nodes5h$passage = nodes5h$dsImpact*nodes5h$usImpact
nodes6h$passage = nodes6h$dsImpact*nodes6h$usImpact
nodesh.mat = data.frame(nodesh)
nodes0h.mat = data.frame(nodes0h)
nodes1h.mat = data.frame(nodes1h)
nodes2h.mat = data.frame(nodes2h)
nodes3h.mat = data.frame(nodes3h)
nodes4h.mat = data.frame(nodes4h)
nodes5h.mat = data.frame(nodes5h)
nodes6h.mat = data.frame(nodes6h)
# --------------------------------------------------
# --------------------------------------------------
# Water diversion calculations
# waterInput = waterInput.mat
sets = c("inStream", "inWshed", "inDitch", "springs", "sinks", "WshedCheck")
outpath = "~/Programming/Trutta/HSHEP/EMaui/EMpackage/eastMaui/outputs/"
# ---------------------------------------------------
# Run function w/ different scenarios
test1 = basinWater.fun(nodes.mat, waterInput.mat) #natural
test2 = basinWater.fun(nodes0.mat, waterInput.mat) #sugar
test3 = basinWater.fun(nodes1.mat, waterInput.mat) #IIFS2008
test4 = basinWater.fun(nodes2.mat, waterInput.mat) #IIFS2008+
test5 = basinWater.fun(nodes3.mat, waterInput.mat) #mixed
test6 = basinWater.fun(nodes4.mat, waterInput.mat) #mixed
test7 = basinWater.fun(nodes5.mat, waterInput.mat) #mixed
test8 = basinWater.fun(nodes6.mat, waterInput.mat) #mixed
# ---------------------------------------------------
instream1 = as.data.frame(test1$inStream)
instream2 = as.data.frame(test2$inStream)
instream3 = as.data.frame(test3$inStream)
instream4 = as.data.frame(test4$inStream)
instream5 = as.data.frame(test5$inStream)
instream6 = as.data.frame(test6$inStream)
instream7 = as.data.frame(test7$inStream)
instream8 = as.data.frame(test8$inStream)
instream = bind_rows(instream1, instream2, instream3, instream4, instream5, instream6, instream7, instream8)
instream = t(instream)
colnames(instream)<-c("natural", "sugar", "IIFS2008", "IIFS2008plus", "mixed","mixed","mixed","mixed")
instream = as.data.frame(instream) %>%
rownames_to_column(var = "basinID") %>%
separate(basinID, into = c("E", "Basin"), sep = "^([E])")
instream$Basin = as.numeric(instream$Basin)
instream = instream[-53,]
instream[75, 2] = 77
add206 = c(0,206,0,0,0)
names(add206) = c("E", "Basin", "mixed", "all0", "all1")
instream = rbind(instream, add206)
add271 = c(0,271,0,0,0)
names(add271) = c("E", "Basin", "mixed", "all0", "all1")
instream = rbind(instream, add271)
add281 = c(0,281,0,0,0)
names(add281) = c("E", "Basin", "mixed", "all0", "all1")
instream = rbind(instream, add281)
instreamOut = instream
instreamOut = instreamOut[, -c(1, 2)]
basins = instream$Basin
instreamOut = instreamOut*0.646317
instreamOut$BasinID = basins
instreamOut = instreamOut[ ,c(9, 1:8)]
instreamOut = instreamOut[order(instreamOut$BasinID), ]
# ---- habitat calculation inputs----------------------
instreamh = instream[order(instream$Basin), -1]
instreamh = remove_rownames(instreamh)
instreamh.mat = data.matrix(instreamh)
instreamh.nat = instreamh.mat[ ,2]
instreamh.sugar = instreamh.mat[ ,3]
instreamh.IIFS = instreamh.mat[ ,4]
instreamh.IIFSplus = instreamh.mat[ ,5]
instreamh.mix = instreamh.mat[ ,6]
instreamh.mix1 = instreamh.mat[ ,7]
instreamh.mix2 = instreamh.mat[ ,8]
instreamh.mix3 = instreamh.mat[ ,9]
waterImpactedHab.nat = (instreamh.nat/instreamh.nat)*100
waterImpactedHab.nat[is.na(waterImpactedHab.nat)]<- 0
waterImpactedHab.nat[is.infinite(waterImpactedHab.nat)]<- 0
waterImpactedHab.sugar = (instreamh.sugar/instreamh.nat)*100
waterImpactedHab.sugar[is.na(waterImpactedHab.sugar)]<- 0
waterImpactedHab.sugar[is.infinite(waterImpactedHab.sugar)]<- 0
View(waterImpactedHab.sugar)
getwd()
Sys.getenv()
Sys.setenv("C:\RBuildTools\3.4\bin")
Sys.setenv("C:/RBuildTools/3.4/bin")
getwd()
setwd("~/Programming/Trutta/To Jim/East Maui")
library(devtools)
library(roxygen2)
Sys.getenv()
library(zip)
build(pkg = "eastMaui", binary = TRUE)
