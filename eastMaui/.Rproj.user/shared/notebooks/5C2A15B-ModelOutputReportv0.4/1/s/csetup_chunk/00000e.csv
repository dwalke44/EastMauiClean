"0","knitr::opts_chunk$set(echo = FALSE)"
"0","knitr::opts_chunk$set(warning = FALSE)"
"0","library(eastMaui)"
"0","library(tidyverse)"
"2","[37m-- [1mAttaching packages[22m --------------------------------------- tidyverse 1.2.1 --[39m
"
"2","[37m[32mv[37m [34mggplot2[37m 2.2.1     [32mv[37m [34mreadr  [37m 1.1.1
[32mv[37m [34mtibble [37m 1.4.2     [32mv[37m [34mdplyr  [37m 0.7.4
[32mv[37m [34mtidyr  [37m 0.8.0     [32mv[37m [34mstringr[37m 1.3.0
[32mv[37m [34mggplot2[37m 2.2.1     [32mv[37m [34mforcats[37m 0.3.0[39m
"
"2","[37m-- [1mConflicts[22m ------------------------------------------ tidyverse_conflicts() --
[31mx[37m [34mdplyr[37m::[32mfilter()[37m masks [34mstats[37m::filter()
[31mx[37m [34mdplyr[37m::[32mlag()[37m    masks [34mstats[37m::lag()[39m
"
"0","library(gridExtra)"
"2","
Attaching package: ‘gridExtra’

"
"2","The following object is masked from ‘package:dplyr’:

    combine

"
"0","library(knitr)"
"0","library(readxl)"
"0","library(openxlsx)"
"0","inpath = ""~/Programming/Trutta/HSHEP/EMaui/EMpackage/eastMaui/rawData"""
"0","# required functions"
"0","percent <- function(x, digits = 2, format = ""f"", ...) {"
"0","  paste0(formatC(100 * x, format = format, digits = digits, ...), ""%"")"
"0","}"
"0","allsp.hab = function(x){"
"0","  y = (1-(0.0000681*((100-x)^2) - 0.00032*(100-x)))"
"0","  return(y)  "
"0","}"
"0","ab.hab = function(x){"
"0","  y = (1-(0.00004678*((100-x)^2) + 0.000313*(100-x)))"
"0","  return(y)"
"0","}"
"0","# read inputs in"
"0","# "
"0","watersheds = read_excel(paste(inpath, ""/BFQ50_1.xlsx"", sep = """"))"
"0","wshedNames = watersheds %>% distinct( WshedID, Wshed_Name ) "
"0","wshedNames = wshedNames[-23, ]"
"0","# watershedsOld = read_excel(paste(inpath, ""/watersheds.xlsx"", sep = """"))"
"0","# Water calculations input"
"0","watershedsWaterInput = watersheds[ ,c(1,2,13)]"
"0","waterInput.mat= as.matrix(watershedsWaterInput)"
"0","# Habitat calculations input matrix"
"0","habitatInput.mat = data.matrix(watersheds)"
"0","habitatInput.mat = habitatInput.mat[, -6]"
"0","# nodes.compare = eastMaui::nodes1"
"0","# nodesOld = read_excel(paste(inpath, ""/nodes_mixed.xlsx"", sep = """"))"
"0","nodes = read_excel(paste(inpath, ""/No Diversion.xlsx"", sep = """"))"
"0","nodes = nodes[ ,-c(2:7)]"
"0","nodes0 = read_excel(paste(inpath, ""/Sugar Diversion.xlsx"", sep = """"))"
"0","nodes0 = nodes0[ ,-c(2:7)]"
"0","nodes1 = read_excel(paste(inpath, ""/IIFS2008.xlsx"", sep = """"))"
"0","nodes1 = nodes1[ ,-c(2:7)]"
"0","nodes2 = read_excel(paste(inpath, ""/IIFS2008_plus_taro.xlsx"", sep = """"))"
"0","nodes2 = nodes2[ ,-c(2:7)]"
"0","nodes3 = read_excel(paste(inpath, ""/DiversionInputMix5.xlsx"", sep = """"))"
"0","nodes3 = nodes3[ ,-c(2:7)]"
"0","nodes4 = read_excel(paste(inpath, ""/DiversionInputMix5.xlsx"", sep = """"))"
"0","nodes4 = nodes4[ ,-c(2:7)]"
"0","nodes5 = read_excel(paste(inpath, ""/DiversionInputMix5.xlsx"", sep = """"))"
"0","nodes5 = nodes5[ ,-c(2:7)]"
"0","nodes6 = read_excel(paste(inpath, ""/DiversionInputMix5.xlsx"", sep = """"))"
"0","nodes6 = nodes6[ ,-c(2:7)]"
"0","nodes = nodes[order(nodes$ID), ]"
"0","nodes0 = nodes0[order(nodes0$ID), ]"
"0","nodes1 = nodes1[order(nodes1$ID), ]"
"0","nodes2 = nodes2[order(nodes2$ID), ]"
"0","nodes3 = nodes3[order(nodes3$ID), ]"
"0","nodes4 = nodes4[order(nodes4$ID), ]"
"0","nodes5 = nodes5[order(nodes5$ID), ]"
"0","nodes6 = nodes6[order(nodes6$ID), ]"
"0","nodes.mat = data.matrix(nodes)"
"0","nodes0.mat = data.matrix(nodes0)"
"0","nodes1.mat = data.matrix(nodes1)"
"0","nodes2.mat = data.matrix(nodes2)"
"0","nodes3.mat = data.matrix(nodes3)"
"0","nodes4.mat = data.matrix(nodes4)"
"0","nodes5.mat = data.matrix(nodes5)"
"0","nodes6.mat = data.matrix(nodes6)"
"0","# calc upstream/downstream effect for each node"
"0","# for habitat calculations"
"0","nodesh = nodes"
"0","nodes0h = nodes0"
"0","nodes1h = nodes1"
"0","nodes2h = nodes2"
"0","nodes3h = nodes3"
"0","nodes4h = nodes4"
"0","nodes5h = nodes5"
"0","nodes6h = nodes6"
"0","nodesh$dsImpact = nodesh$DnEntrain*nodesh$DnBarrier*nodesh$DnHab*nodesh$DnOther"
"0","nodes0h$dsImpact = nodes0h$DnEntrain*nodes0h$DnBarrier*nodes0h$DnHab*nodes0h$DnOther"
"0","nodes1h$dsImpact = nodes1h$DnEntrain*nodes1h$DnBarrier*nodes1h$DnHab*nodes1h$DnOther"
"0","nodes2h$dsImpact = nodes2h$DnEntrain*nodes2h$DnBarrier*nodes2h$DnHab*nodes2h$DnOther"
"0","nodes3h$dsImpact = nodes3h$DnEntrain*nodes3h$DnBarrier*nodes3h$DnHab*nodes3h$DnOther"
"0","nodes4h$dsImpact = nodes4h$DnEntrain*nodes4h$DnBarrier*nodes4h$DnHab*nodes4h$DnOther"
"0","nodes5h$dsImpact = nodes5h$DnEntrain*nodes5h$DnBarrier*nodes5h$DnHab*nodes5h$DnOther"
"0","nodes6h$dsImpact = nodes6h$DnEntrain*nodes6h$DnBarrier*nodes6h$DnHab*nodes6h$DnOther"
"0","nodesh$usImpact = nodesh$UpEntrain*nodesh$UpBarrier*nodesh$UpOther*nodesh$UpHab"
"0","nodes0h$usImpact = nodes0h$UpEntrain*nodes0h$UpBarrier*nodes0h$UpOther*nodes0h$UpHab"
"0","nodes1h$usImpact = nodes1h$UpEntrain*nodes1h$UpBarrier*nodes1h$UpOther*nodes1h$UpHab"
"0","nodes2h$usImpact = nodes2h$UpEntrain*nodes2h$UpBarrier*nodes2h$UpOther*nodes2h$UpHab"
"0","nodes3h$usImpact = nodes3h$UpEntrain*nodes3h$UpBarrier*nodes3h$UpOther*nodes3h$UpHab"
"0","nodes4h$usImpact = nodes4h$UpEntrain*nodes4h$UpBarrier*nodes4h$UpOther*nodes4h$UpHab"
"0","nodes5h$usImpact = nodes5h$UpEntrain*nodes5h$UpBarrier*nodes5h$UpOther*nodes5h$UpHab"
"0","nodes6h$usImpact = nodes6h$UpEntrain*nodes6h$UpBarrier*nodes6h$UpOther*nodes6h$UpHab"
"0","nodesh$passage = nodesh$dsImpact*nodesh$usImpact"
"0","nodes0h$passage = nodes0h$dsImpact*nodes0h$usImpact"
"0","nodes1h$passage = nodes1h$dsImpact*nodes1h$usImpact"
"0","nodes2h$passage = nodes2h$dsImpact*nodes2h$usImpact"
"0","nodes3h$passage = nodes3h$dsImpact*nodes3h$usImpact"
"0","nodes4h$passage = nodes4h$dsImpact*nodes4h$usImpact"
"0","nodes5h$passage = nodes5h$dsImpact*nodes5h$usImpact"
"0","nodes6h$passage = nodes6h$dsImpact*nodes6h$usImpact"
"0","nodesh.mat = data.frame(nodesh)"
"0","nodes0h.mat = data.frame(nodes0h)"
"0","nodes1h.mat = data.frame(nodes1h)"
"0","nodes2h.mat = data.frame(nodes2h)"
"0","nodes3h.mat = data.frame(nodes3h)"
"0","nodes4h.mat = data.frame(nodes4h)"
"0","nodes5h.mat = data.frame(nodes5h)"
"0","nodes6h.mat = data.frame(nodes6h)"
"0","# --------------------------------------------------"
"0","# --------------------------------------------------"
"0","# Water diversion calculations"
"0","waterInput = waterInput.mat"
"0","sets = c(""inStream"", ""inWshed"", ""inDitch"", ""springs"", ""sinks"", ""WshedCheck"")"
"0","outpath = ""~/Programming/Trutta/HSHEP/EMaui/EMpackage/eastMaui/outputs/"""
"0","# ---------------------------------------------------"
"0","# Run function w/ different scenarios"
"0","test1 = basinWater.fun(nodes.mat, waterInput.mat) #natural"
"0","test2 = basinWater.fun(nodes0.mat, waterInput.mat) #sugar"
"0","test3 = basinWater.fun(nodes1.mat, waterInput.mat) #IIFS2008"
"0","test4 = basinWater.fun(nodes2.mat, waterInput.mat) #IIFS2008+"
"0","test5 = basinWater.fun(nodes3.mat, waterInput.mat) #mixed"
"0","test6 = basinWater.fun(nodes4.mat, waterInput.mat) #mixed"
"0","test7 = basinWater.fun(nodes5.mat, waterInput.mat) #mixed"
"0","test8 = basinWater.fun(nodes6.mat, waterInput.mat) #mixed"
"0","# ---------------------------------------------------"
"0","instream1 = as.data.frame(test1$inStream)"
"0","instream2 = as.data.frame(test2$inStream)"
"0","instream3 = as.data.frame(test3$inStream)"
"0","instream4 = as.data.frame(test4$inStream)"
"0","instream5 = as.data.frame(test5$inStream)"
"0","instream6 = as.data.frame(test6$inStream)"
"0","instream7 = as.data.frame(test7$inStream)"
"0","instream8 = as.data.frame(test8$inStream)"
"0","instream = bind_rows(instream1, instream2, instream3, instream4, instream5, instream6, instream7, instream8)"
"0","instream = t(instream)"
"0","colnames(instream)<-c(""natural"", ""sugar"", ""IIFS2008"", ""IIFS2008plus"", ""mixed"",""mixed"",""mixed"",""mixed"")"
"0","instream = as.data.frame(instream) %>%"
"0","  rownames_to_column(var = ""basinID"") %>%"
"0","  separate(basinID, into = c(""E"", ""Basin""), sep = ""^([E])"")"
"0","instream$Basin = as.numeric(instream$Basin)"
"0","instream = instream[-53,]"
"0","instream[75, 2] = 77"
"0","add206 = c(0,206,0,0,0)"
"0","names(add206) = c(""E"", ""Basin"", ""mixed"", ""all0"", ""all1"")"
"0","instream = rbind(instream, add206)"
"0","add271 = c(0,271,0,0,0)"
"0","names(add271) = c(""E"", ""Basin"", ""mixed"", ""all0"", ""all1"")"
"0","instream = rbind(instream, add271)"
"0","add281 = c(0,281,0,0,0)"
"0","names(add281) = c(""E"", ""Basin"", ""mixed"", ""all0"", ""all1"")"
"0","instream = rbind(instream, add281)"
"0","instreamOut = instream"
"0","instreamOut = instreamOut[, -c(1, 2)]"
"0","basins = instream$Basin"
"0","instreamOut = instreamOut*0.646317"
"0","instreamOut$BasinID = basins"
"0","instreamOut = instreamOut[ ,c(9, 1:8)]"
"0","instreamOut = instreamOut[order(instreamOut$BasinID), ]"
"0","# ---- habitat calculation inputs----------------------"
"0","instreamh = instream[order(instream$Basin), -1]"
"0","instreamh = remove_rownames(instreamh) "
"0","instreamh.mat = data.matrix(instreamh)"
"0","instreamh.nat = instreamh.mat[ ,2]"
"0","instreamh.sugar = instreamh.mat[ ,3]"
"0","instreamh.IIFS = instreamh.mat[ ,4]"
"0","instreamh.IIFSplus = instreamh.mat[ ,5]"
"0","instreamh.mix = instreamh.mat[ ,6]"
"0","instreamh.mix1 = instreamh.mat[ ,7]"
"0","instreamh.mix2 = instreamh.mat[ ,8]"
"0","instreamh.mix3 = instreamh.mat[ ,9]"
"0","waterImpactedHab.nat = (instreamh.nat/instreamh.nat)*100"
"0","waterImpactedHab.nat[is.na(waterImpactedHab.nat)]<- 0"
"0","waterImpactedHab.nat[is.infinite(waterImpactedHab.nat)]<- 0"
"0","waterImpactedHab.sugar = (instreamh.sugar/instreamh.nat)*100"
"0","waterImpactedHab.sugar[is.na(waterImpactedHab.sugar)]<- 0"
"0","waterImpactedHab.sugar[is.infinite(waterImpactedHab.sugar)]<- 0"
"0","waterImpactedHab.IIFS = (instreamh.IIFS/instreamh.nat)*100"
"0","waterImpactedHab.IIFS[is.na(waterImpactedHab.IIFS)]<- 0"
"0","waterImpactedHab.IIFS[is.infinite(waterImpactedHab.IIFS)]<- 0"
"0","waterImpactedHab.IIFSplus = (instreamh.IIFSplus/instreamh.nat)*100"
"0","waterImpactedHab.IIFSplus[is.na(waterImpactedHab.IIFSplus)]<- 0"
"0","waterImpactedHab.IIFSplus[is.infinite(waterImpactedHab.IIFSplus)]<- 0"
"0","waterImpactedHab.mix = (instreamh.mix/instreamh.nat)*100"
"0","waterImpactedHab.mix[is.na(waterImpactedHab.mix)]<- 0"
"0","waterImpactedHab.mix[is.infinite(waterImpactedHab.mix)]<- 0"
"0","waterImpactedHab.mix1 = (instreamh.mix1/instreamh.nat)*100"
"0","waterImpactedHab.mix1[is.na(waterImpactedHab.mix1)]<- 0"
"0","waterImpactedHab.mix1[is.infinite(waterImpactedHab.mix1)]<- 0"
"0","waterImpactedHab.mix2 = (instreamh.mix2/instreamh.nat)*100"
"0","waterImpactedHab.mix2[is.na(waterImpactedHab.mix2)]<- 0"
"0","waterImpactedHab.mix2[is.infinite(waterImpactedHab.mix2)]<- 0"
"0","waterImpactedHab.mix3 = (instreamh.mix3/instreamh.nat)*100"
"0","waterImpactedHab.mix3[is.na(waterImpactedHab.mix3)]<- 0"
"0","waterImpactedHab.mix3[is.infinite(waterImpactedHab.mix3)]<- 0"
"0","# -----------------------------------------------------"
"0","inwshed1 = as.data.frame(test1$inWshed)"
"0","inwshed2 = as.data.frame(test2$inWshed)"
"0","inwshed3 = as.data.frame(test3$inWshed)"
"0","inwshed4 = as.data.frame(test4$inWshed)"
"0","inwshed5 = as.data.frame(test5$inWshed)"
"0","inwshed6 = as.data.frame(test6$inWshed)"
"0","inwshed7 = as.data.frame(test7$inWshed)"
"0","inwshed8 = as.data.frame(test8$inWshed)"
"0","inwshed = bind_rows(inwshed1, inwshed2, inwshed3, inwshed4, inwshed5, inwshed6, inwshed7, inwshed8)"
"0","inwshed = t(inwshed)"
"0","colnames(inwshed)<-c(""natural"", ""sugar"", ""IIFS2008"", ""IIFS2008plus"", ""mixed"",""mixed"",""mixed"",""mixed"")"
"0","inwshed = as.data.frame(inwshed) %>%"
"0","  rownames_to_column(var = ""wshedID"") %>%"
"0","  separate(wshedID, into= c(""w"", ""Wshed""), sep = ""^([w])"")"
"0","inwshed$Wshed = as.numeric(inwshed$Wshed)"
"0","inwshed = inwshed[, -1]"
"0","# -----------------------------------------------------"
"0","inditch1 = as.data.frame(test1$inDitch)"
"0","inditch2 = as.data.frame(test2$inDitch)"
"0","inditch3 = as.data.frame(test3$inDitch)"
"0","inditch4 = as.data.frame(test4$inDitch)"
"0","inditch5 = as.data.frame(test5$inDitch)"
"0","inditch6 = as.data.frame(test6$inDitch)"
"0","inditch7 = as.data.frame(test7$inDitch)"
"0","inditch8 = as.data.frame(test8$inDitch)"
"0","inditch1[which(inditch1<0)]<- 0"
"0","inditch2[which(inditch2<0)]<- 0"
"0","inditch3[which(inditch3<0)]<- 0"
"0","inditch4[which(inditch4<0)]<- 0"
"0","inditch5[which(inditch5<0)]<- 0"
"0","inditch6[which(inditch6<0)]<- 0"
"0","inditch7[which(inditch7<0)]<- 0"
"0","inditch8[which(inditch8<0)]<- 0"
"0","inditch = bind_rows(inditch1, inditch2, inditch3, inditch4, inditch5, inditch6, inditch7, inditch8)"
"0","inditch = t(inditch)"
"0","colnames(inditch)<-c(""natural"", ""sugar"", ""IIFS2008"", ""IIFS2008plus"", ""mixed"",""mixed"",""mixed"",""mixed"")"
"0","inditch = as.data.frame(inditch) %>%"
"0","  rownames_to_column(var = ""ditchID"") %>%"
"0","  separate(ditchID, into = c(""n"", ""NodeID""), sep = ""^([n])"")"
"0","inditch$NodeID = as.numeric(inditch$NodeID)"
"0","inditch = inditch[ , -1]"
"0","# convert to mgd - millions of gallons per day"
"0","inditch.mgd = inditch[ ,-1]"
"0","inditch.mgd = inditch.mgd*0.646317"
"0","inditch.mgd$NodeID = inditch[ ,1]"
"0","inditch.mgd = inditch.mgd[ , c(9, 1:8)]"
"0","inditch.mgd = inditch.mgd[order(inditch.mgd$NodeID),] %>% "
"0","  remove_rownames() "
"0","# ---------------------------------------------------"
"0","wshedcheck1 = as.data.frame(test1$WshedCheck)"
"0","wshedcheck2 = as.data.frame(test2$WshedCheck)"
"0","wshedcheck3 = as.data.frame(test3$WshedCheck)"
"0","wshedcheck4 = as.data.frame(test4$WshedCheck)"
"0","wshedcheck5 = as.data.frame(test5$WshedCheck)"
"0","wshedcheck6 = as.data.frame(test6$WshedCheck)"
"0","wshedcheck7 = as.data.frame(test7$WshedCheck)"
"0","wshedcheck8 = as.data.frame(test8$WshedCheck)"
"0","check = bind_rows(wshedcheck1, wshedcheck2, wshedcheck3, wshedcheck4, wshedcheck5,wshedcheck6,wshedcheck7,wshedcheck8)"
"0","check = t(check)"
"0","colnames(check)<-c(""natural"", ""sugar"", ""IIFS2008"", ""IIFS2008plus"", ""mixed"",""mixed"",""mixed"",""mixed"")"
"0","check = as.data.frame(check) %>%"
"0","  rownames_to_column(var = ""wshed"") %>%"
"0","  separate(wshed, into = c(""w"", ""Wshed""), sep = ""^([w])"")"
"0","check$Wshed = as.numeric(check$Wshed)"
"0","check = check[, -1]"
"0","# ----------------------------------------------"
"0","springs1 = as.data.frame(test1$springs)"
"0","springs2 = as.data.frame(test2$springs)"
"0","springs3 = as.data.frame(test3$springs)"
"0","springs4 = as.data.frame(test4$springs)"
"0","springs5 = as.data.frame(test5$springs)"
"0","springs6 = as.data.frame(test6$springs)"
"0","springs7 = as.data.frame(test7$springs)"
"0","springs8 = as.data.frame(test8$springs)"
"0","springs = bind_rows(springs1, springs2, springs3, springs4, springs5, springs6, springs7, springs8)"
"0","springs = t(springs)"
"0","colnames(springs)<-c(""natural"", ""sugar"", ""IIFS2008"", ""IIFS2008plus"", ""mixed"",""mixed"",""mixed"",""mixed"")"
"0","springs = as.data.frame(springs) %>%"
"0","  rownames_to_column(var = ""springID"") %>%"
"0","  separate(springID, into = c(""E"", ""spring_ID""), sep = ""^([E])"")"
"0","springs = springs[ , -1]"
"0","# ----------------------------------------------"
"0","sinks1 = as.data.frame(test1$sinks)"
"0","sinks2 = as.data.frame(test2$sinks)"
"0","sinks3 = as.data.frame(test3$sinks)"
"0","sinks4 = as.data.frame(test4$sinks)"
"0","sinks5 = as.data.frame(test5$sinks)"
"0","sinks6 = as.data.frame(test6$sinks)"
"0","sinks7 = as.data.frame(test7$sinks)"
"0","sinks8 = as.data.frame(test8$sinks)"
"0","sinks = bind_rows(sinks1, sinks2, sinks3, sinks4, sinks5, sinks6, sinks7, sinks8)"
"0","sinks = t(sinks)"
"0","colnames(sinks)<- c(""natural"", ""sugar"", ""IIFS2008"", ""IIFS2008plus"", ""mixed"",""mixed"",""mixed"",""mixed"")"
"0","sinks = as.data.frame(sinks) %>%"
"0","  rownames_to_column(var = ""sinkID"") %>%"
"0","  separate(sinkID, into = c(""E"", ""sink_ID""), sep = ""^([E])"")"
"0","sinks = sinks[ , -1]"
"0","# ---------------------------------------------------"
"0","# prep inputs for export to final workbook"
"0","waterOutput = watersheds"
"0","nodespath = ""~/Programming/Trutta/HSHEP/EMaui/EMpackage/eastMaui/rawData"""
"0","nodesOutput = read_excel(paste(nodespath, ""/nodes_for_output.xlsx"", sep = """"))"
"0","dsNodes = read_excel(paste(nodespath, ""/BasinsAllGroups.xlsx"", sep = """"))"
"0","dsNodes = dsNodes[ ,c(1,2,25)]"
"0","ditchNamespath = ""~/Programming/Trutta/HSHEP/EMaui/EMpackage/eastMaui/rawData/Ditch Groups.xlsx"""
"0","ditchnames = read_excel(ditchNamespath)"
"0","# ---------------------------------------------"
"0","# results"
"0","output_list = list(""watershedsInput"" = waterOutput,"
"0","                   ""diversionsInput"" = nodesOutput,"
"0","                   ""WshedCheck"" = check,"
"0","                   ""inStream"" = instream,"
"0","                   ""inWshed""= inwshed,"
"0","                   ""inDitch"" = inditch,"
"0","                   ""springs"" = springs,"
"0","                   ""sinks"" = sinks)"
"0","file = paste(outpath, ""water_outputs.0.6.xlsx"", sep = """")"
"0","Sys.setenv(""R_ZIPCMD"" = ""C:/RBuildTools/3.4/bin/zip.exe"")"
"0","write.xlsx(output_list, file = file)"
"0","# ---------------------------------------------"
"0","# --------------------------------------------"
"0","# --------------------------------------------"
"0","# Habitat Modeling"
"0","htest1 = basin.fun(nodesh.mat, habitatInput.mat, waterImpactedHab.nat)"
"0","htest2 = basin.fun(nodes0h.mat, habitatInput.mat, waterImpactedHab.sugar)"
"0","htest3 = basin.fun(nodes1h.mat, habitatInput.mat, waterImpactedHab.IIFS)"
"0","htest4 = basin.fun(nodes2h.mat, habitatInput.mat, waterImpactedHab.IIFSplus)"
"0","htest5 = basin.fun(nodes3h.mat, habitatInput.mat, waterImpactedHab.mix)"
"0","htest6 = basin.fun(nodes4h.mat, habitatInput.mat, waterImpactedHab.mix1)"
"0","htest7 = basin.fun(nodes5h.mat, habitatInput.mat, waterImpactedHab.mix2)"
"0","htest8 = basin.fun(nodes6h.mat, habitatInput.mat, waterImpactedHab.mix3)"
"0","# calc hab by wshed"
"0","AllSpHab1 = as.data.frame(htest1$WsedHabAllSp)"
"0","AllSpHab2 = as.data.frame(htest2$WsedHabAllSp)"
"0","AllSpHab3 = as.data.frame(htest3$WsedHabAllSp)"
"0","AllSpHab4 = as.data.frame(htest4$WsedHabAllSp)"
"0","AllSpHab5 = as.data.frame(htest5$WsedHabAllSp)"
"0","AllSpHab6 = as.data.frame(htest6$WsedHabAllSp)"
"0","AllSpHab7 = as.data.frame(htest7$WsedHabAllSp)"
"0","AllSpHab8 = as.data.frame(htest8$WsedHabAllSp)"
"0"," "
"0","AllSpHab1 = (t(AllSpHab1))"
"0","AllSpHab2 = (t(AllSpHab2))"
"0","AllSpHab3 = (t(AllSpHab3))"
"0","AllSpHab4 = (t(AllSpHab4))"
"0","AllSpHab5 = (t(AllSpHab5))"
"0","AllSpHab6 = (t(AllSpHab6))"
"0","AllSpHab7 = (t(AllSpHab7))"
"0","AllSpHab8 = (t(AllSpHab8))"
"0","ABSpHab1 = as.data.frame(htest1$WshedHabAB)"
"0","ABSpHab2 = as.data.frame(htest2$WshedHabAB)"
"0","ABSpHab3 = as.data.frame(htest3$WshedHabAB)"
"0","ABSpHab4 = as.data.frame(htest4$WshedHabAB)"
"0","ABSpHab5 = as.data.frame(htest5$WshedHabAB)"
"0","ABSpHab6 = as.data.frame(htest6$WshedHabAB)"
"0","ABSpHab7 = as.data.frame(htest7$WshedHabAB)"
"0","ABSpHab8 = as.data.frame(htest8$WshedHabAB)"
"0"," "
"0","ABSpHab1 = (t(ABSpHab1))"
"0","ABSpHab2 = (t(ABSpHab2))"
"0","ABSpHab3 = (t(ABSpHab3))"
"0","ABSpHab4 = (t(ABSpHab4))"
"0","ABSpHab5 = (t(ABSpHab5))"
"0","ABSpHab6 = (t(ABSpHab6))"
"0","ABSpHab7 = (t(ABSpHab7))"
"0","ABSpHab8 = (t(ABSpHab8))"
"0","AllSpHab.nat = data.frame(AllSpHab1, ABSpHab1)"
"0","AllSpHab.nat$total = rowSums(AllSpHab.nat)"
"0","AllSpHab.nat = remove_rownames(AllSpHab.nat)"
"0","AllSpHab.sugar = data.frame(AllSpHab2, ABSpHab2)"
"0","AllSpHab.sugar$total = rowSums(AllSpHab.sugar)"
"0","AllSpHab.sugar = remove_rownames(AllSpHab.sugar)"
"0","AllSpHab.IIFS = data.frame(AllSpHab3, ABSpHab3)"
"0","AllSpHab.IIFS$total = rowSums(AllSpHab.IIFS)"
"0","AllSpHab.IIFS = remove_rownames(AllSpHab.IIFS)"
"0","AllSpHab.IIFSplus = data.frame(AllSpHab4, ABSpHab4)"
"0","AllSpHab.IIFSplus$total = rowSums(AllSpHab.IIFSplus)"
"0","AllSpHab.IIFSplus = remove_rownames(AllSpHab.IIFSplus)"
"0","AllSpHab.mix = data.frame(AllSpHab5, ABSpHab5)"
"0","AllSpHab.mix$total = rowSums(AllSpHab.mix)"
"0","AllSpHab.mix = remove_rownames(AllSpHab.mix)"
"0","AllSpHab.mix1 = data.frame(AllSpHab6, ABSpHab6)"
"0","AllSpHab.mix1$total = rowSums(AllSpHab.mix1)"
"0","AllSpHab.mix1 = remove_rownames(AllSpHab.mix1)"
"0","AllSpHab.mix2 = data.frame(AllSpHab7, ABSpHab7)"
"0","AllSpHab.mix2$total = rowSums(AllSpHab.mix2)"
"0","AllSpHab.mix2 = remove_rownames(AllSpHab.mix2)"
"0","AllSpHab.mix3 = data.frame(AllSpHab8, ABSpHab8)"
"0","AllSpHab.mix3$total = rowSums(AllSpHab.mix3)"
"0","AllSpHab.mix3 = remove_rownames(AllSpHab.mix3)"
"0","# calc hab by basin"
"0","AllSpBasHab1 = as.data.frame(htest1$WaterPassageHabAllSp)"
"0","AllSpBasHab2 = as.data.frame(htest2$WaterPassageHabAllSp)"
"0","AllSpBasHab3 = as.data.frame(htest3$WaterPassageHabAllSp)"
"0","AllSpBasHab4 = as.data.frame(htest4$WaterPassageHabAllSp)"
"0","AllSpBasHab5 = as.data.frame(htest5$WaterPassageHabAllSp)"
"0","AllSpBasHab6 = as.data.frame(htest6$WaterPassageHabAllSp)"
"0","AllSpBasHab7 = as.data.frame(htest7$WaterPassageHabAllSp)"
"0","AllSpBasHab8 = as.data.frame(htest8$WaterPassageHabAllSp)"
"0"," "
"0","AllSpBasHab1 = (t(AllSpBasHab1))"
"0","AllSpBasHab2 = (t(AllSpBasHab2))"
"0","AllSpBasHab3 = (t(AllSpBasHab3))"
"0","AllSpBasHab4 = (t(AllSpBasHab4))"
"0","AllSpBasHab5 = (t(AllSpBasHab5))"
"0","AllSpBasHab6 = (t(AllSpBasHab6))"
"0","AllSpBasHab7 = (t(AllSpBasHab7))"
"0","AllSpBasHab8 = (t(AllSpBasHab8))"
"0","ABSpBasHab1 = as.data.frame(htest1$WaterPassageHabAB)"
"0","ABSpBasHab2 = as.data.frame(htest2$WaterPassageHabAB)"
"0","ABSpBasHab3 = as.data.frame(htest3$WaterPassageHabAB)"
"0","ABSpBasHab4 = as.data.frame(htest4$WaterPassageHabAB)"
"0","ABSpBasHab5 = as.data.frame(htest5$WaterPassageHabAB)"
"0","ABSpBasHab6 = as.data.frame(htest6$WaterPassageHabAB)"
"0","ABSpBasHab7 = as.data.frame(htest7$WaterPassageHabAB)"
"0","ABSpBasHab8 = as.data.frame(htest8$WaterPassageHabAB)"
"0"," "
"0","ABSpBasHab1 = (t(ABSpBasHab1))"
"0","ABSpBasHab2 = (t(ABSpBasHab2))"
"0","ABSpBasHab3 = (t(ABSpBasHab3))"
"0","ABSpBasHab4 = (t(ABSpBasHab4))"
"0","ABSpBasHab5 = t((ABSpBasHab5))"
"0","ABSpBasHab6 = (t(ABSpBasHab6))"
"0","ABSpBasHab7 = (t(ABSpBasHab7))"
"0","ABSpBasHab8 = (t(ABSpBasHab8))"
"0","AllSpBasHab.nat = data.frame(AllSpBasHab1, ABSpBasHab1) "
"0","AllSpBasHab.nat$total = rowSums(AllSpBasHab.nat) "
"0","AllSpBasHab.nat = AllSpBasHab.nat %>%"
"0","  rownames_to_column(var = ""BasinID"") %>%"
"0","  separate(BasinID, into = c(""A"", ""BasinID""), sep = ""^([a])"")"
"0","AllSpBasHab.nat$BasinID = as.numeric(AllSpBasHab.nat$BasinID)"
"0","AllSpBasHab.nat = AllSpBasHab.nat[ , -1]"
"0","AllSpBasHab.sugar = data.frame(AllSpBasHab2, ABSpBasHab2)"
"0","AllSpBasHab.sugar$total = rowSums(AllSpBasHab.sugar)"
"0","AllSpBasHab.sugar = AllSpBasHab.sugar %>%"
"0","  rownames_to_column(var = ""BasinID"") %>%"
"0","  separate(BasinID, into = c(""A"", ""BasinID""), sep = ""^([a])"")"
"0","AllSpBasHab.sugar$BasinID = as.numeric(AllSpBasHab.sugar$BasinID)"
"0","AllSpBasHab.sugar = AllSpBasHab.sugar[ , -1]"
"0","AllSpBasHab.IIFS = data.frame(AllSpBasHab3, ABSpBasHab3)"
"0","AllSpBasHab.IIFS$total = rowSums(AllSpBasHab.IIFS)"
"0","AllSpBasHab.IIFS = AllSpBasHab.IIFS %>%"
"0","  rownames_to_column(var = ""BasinID"") %>%"
"0","  separate(BasinID, into = c(""A"", ""BasinID""), sep = ""^([a])"")"
"0","AllSpBasHab.IIFS$BasinID = as.numeric(AllSpBasHab.IIFS$BasinID)"
"0","AllSpBasHab.IIFS = AllSpBasHab.IIFS[ , -1]"
"0","AllSpBasHab.IIFSplus = data.frame(AllSpBasHab4, ABSpBasHab4)"
"0","AllSpBasHab.IIFSplus$total = rowSums(AllSpBasHab.IIFSplus)"
"0","AllSpBasHab.IIFSplus = AllSpBasHab.IIFSplus %>%"
"0","  rownames_to_column(var = ""BasinID"") %>%"
"0","  separate(BasinID, into = c(""A"", ""BasinID""), sep = ""^([a])"")"
"0","AllSpBasHab.IIFSplus$BasinID = as.numeric(AllSpBasHab.IIFSplus$BasinID)"
"0","AllSpBasHab.IIFSplus = AllSpBasHab.IIFSplus[ , -1]"
"0","AllSpBasHab.mix = data.frame(AllSpBasHab5, ABSpBasHab5)"
"0","AllSpBasHab.mix$total = rowSums(AllSpBasHab.mix)"
"0","AllSpBasHab.mix = AllSpBasHab.mix %>%"
"0","  rownames_to_column(var = ""BasinID"") %>%"
"0","  separate(BasinID, into = c(""A"", ""BasinID""), sep = ""^([a])"")"
"0","AllSpBasHab.mix$BasinID = as.numeric(AllSpBasHab.mix$BasinID)"
"0","AllSpBasHab.mix = AllSpBasHab.mix[ , -1]"
"0","AllSpBasHab.mix1 = data.frame(AllSpBasHab6, ABSpBasHab6)"
"0","AllSpBasHab.mix1$total = rowSums(AllSpBasHab.mix1)"
"0","AllSpBasHab.mix1 = AllSpBasHab.mix1 %>%"
"0","  rownames_to_column(var = ""BasinID"") %>%"
"0","  separate(BasinID, into = c(""A"", ""BasinID""), sep = ""^([a])"")"
"0","AllSpBasHab.mix1$BasinID = as.numeric(AllSpBasHab.mix1$BasinID)"
"0","AllSpBasHab.mix1 = AllSpBasHab.mix1[ , -1]"
"0","AllSpBasHab.mix2 = data.frame(AllSpBasHab7, ABSpBasHab7)"
"0","AllSpBasHab.mix2$total = rowSums(AllSpBasHab.mix2)"
"0","AllSpBasHab.mix2 = AllSpBasHab.mix2 %>%"
"0","  rownames_to_column(var = ""BasinID"") %>%"
"0","  separate(BasinID, into = c(""A"", ""BasinID""), sep = ""^([a])"")"
"0","AllSpBasHab.mix2$BasinID = as.numeric(AllSpBasHab.mix2$BasinID)"
"0","AllSpBasHab.mix2 = AllSpBasHab.mix2[ , -1]"
"0","AllSpBasHab.mix3 = data.frame(AllSpBasHab8, ABSpBasHab8)"
"0","AllSpBasHab.mix3$total = rowSums(AllSpBasHab.mix3)"
"0","AllSpBasHab.mix3 = AllSpBasHab.mix3 %>%"
"0","  rownames_to_column(var = ""BasinID"") %>%"
"0","  separate(BasinID, into = c(""A"", ""BasinID""), sep = ""^([a])"")"
"0","AllSpBasHab.mix3$BasinID = as.numeric(AllSpBasHab.mix3$BasinID)"
"0","AllSpBasHab.mix3 = AllSpBasHab.mix3[ , -1]"
"0"," "
"0","# -----------------------------------------------------"
"0","# 8 scenario output to excel workbook"
"0","# -----------------------------------------------------"
"0","colnames(nodesOutput)[1]<- ""NodeID"""
"0","nodesInfo = nodesOutput[, c(1,4,6,7)]"
"0","inditch.mgd %>% left_join(nodesInfo, by = ""NodeID"") -> nodesOutput0"
"0","nodesOutput0 = nodesOutput0[which(nodesOutput0$DiversionID %in% c(1:10)), ]"
"0","nodesOutput0 %>%"
"0","  group_by(DiversionID) %>%"
"0","  summarise_at(vars(c(2:9)), sum)  %>%"
"0","  left_join(ditchnames, by = ""DiversionID"")-> summByDiversion"
"0","summByDiversion = summByDiversion[ ,c(1,10,2:9)]"
"0","inwshedOut = inwshed[ ,-1]"
"0","WshedID = inwshed[ ,1]"
"0","inwshedOut.mgd = inwshedOut*0.646317"
"0","inwshedOut.mgd$WshedID = WshedID"
"0","wshedsOutput = left_join(wshedNames, inwshedOut.mgd, by = ""WshedID"")"
"0","leasesByID = waterOutput[ ,c(2,4,7)]"
"0","colnames(dsNodes)[3]<- ""NodeID"""
"0","leases = left_join(dsNodes, leasesByID, by = ""BASINID"") %>%"
"0","  left_join(inditch, by = ""NodeID"") %>%"
"0","  filter(NodeID<45 | NodeID>54) %>%"
"0","  group_by(Lease_ID)"
"0","leases = leases[complete.cases(leases), ]"
"0","leases = leases %>% summarise_at(vars(c(5:12)), sum)"
"0","taro = left_join(dsNodes, leasesByID, by = ""BASINID"") %>%"
"0","  left_join(inditch, by = ""NodeID"") %>%"
"0","  filter(NodeID<45 | NodeID>54) %>%"
"0","  group_by(Taro_ID)"
"0","taro = taro[complete.cases(taro),]"
"0","taro = taro %>% summarise_at(vars(c(5:12)), sum)"
"0","wshed.hab.total = data.frame(AllSpHab.nat[ ,9],"
"0","                             AllSpHab.sugar[ ,9],"
"0","                             AllSpHab.IIFS[ ,9],"
"0","                             AllSpHab.IIFSplus[ ,9],"
"0","                             AllSpHab.mix[ ,9],"
"0","                             AllSpHab.mix1[ ,9],"
"0","                             AllSpHab.mix2[ ,9],"
"0","                             AllSpHab.mix3[ ,9])"
"0","wshed.hab.total$WatershedName = wshedNames$Wshed_Name"
"0","wshed.hab.total$WshedID = wshedNames$WshedID"
"0","colnames(wshed.hab.total)[1:8]<- c(""natural"", ""sugar"", ""IIFS"","
"0","                                   ""IIFSplus"", ""mixed"", ""mixed1"", ""mixed2"","
"0","                                   ""mixed3"")"
"0","wshed.hab.total = wshed.hab.total[ ,c(10,9, 1:8)]"
"0","basin.hab.total = data.frame(AllSpBasHab.nat[ ,1],"
"0","                             AllSpBasHab.nat[ ,10],"
"0","                             AllSpBasHab.sugar[ ,10],"
"0","                             AllSpBasHab.IIFS[ ,10],"
"0","                             AllSpBasHab.IIFSplus[ ,10],"
"0","                             AllSpBasHab.mix[ ,10],"
"0","                             AllSpBasHab.mix1[ ,10],"
"0","                             AllSpBasHab.mix2[ ,10],"
"0","                             AllSpBasHab.mix3[ ,10])"
"0","colnames(basin.hab.total) = c(""BasinID"", ""natural"", ""sugar"", ""IIFS"","
"0","                              ""IIFSplus"", ""mixed"", ""mixed1"", ""mixed2"","
"0","                              ""mixed3"")"
"0","totalOutput8 = list(""WaterInDiversion"" = summByDiversion,"
"0","                   ""WaterInWatersheds"" = wshedsOutput,"
"0","                   ""WaterInBasins"" = instreamOut,"
"0","                   ""WaterInNodes"" = nodesOutput0,"
"0","                   ""WaterByLease"" = leases,"
"0","                   ""WaterInTaro"" = taro,"
"0","                   ""HabitatInWatersheds"" = wshed.hab.total,"
"0","                   ""HabitatInBasins"" = basin.hab.total,"
"0","                   ""BasinHabNatural"" = AllSpBasHab.nat,"
"0","                   ""BasinHabSugar"" = AllSpBasHab.sugar,"
"0","                   ""BasinHabIIFS"" = AllSpBasHab.IIFS,"
"0","                   ""BasinHabIIFS+"" = AllSpBasHab.IIFSplus,"
"0","                   ""BasinHabMix"" = AllSpBasHab.mix,"
"0","                   ""BasinHabMix1"" = AllSpBasHab.mix1,"
"0","                   ""BasinHabMix2"" = AllSpBasHab.mix2,"
"0","                   ""BasinHabMix3"" = AllSpBasHab.mix3)"
"0","file = paste(outpath, ""total_output8.0.2.xlsx"", sep = """")"
"0","Sys.setenv(""R_ZIPCMD"" = ""C:/RBuildTools/3.4/bin/zip.exe"")"
"0","openxlsx::write.xlsx(totalOutput8, file = file)"
